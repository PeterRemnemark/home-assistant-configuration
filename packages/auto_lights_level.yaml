sensor:
  - platform: statistics
    entity_id: sensor.dinner_room_luminance
    name: Luminance dinner Room
    sampling_size: 17
  - platform: template
    sensors:
  ############################################################
  #
  # Set brightness depending on Time of Day
  #
  ############################################################
      time_brightness:
        value_template: >-
          {%- if now().strftime('%H%M')|int < 600 -%}
            32
          {%- elif now().strftime('%H%M')|int < 700 -%}
            64
          {%- elif now().strftime('%H%M')|int < 900 -%}
            128
          {%- elif now().strftime('%H%M')|int < 1000 -%}
            192
          {%- elif now().strftime('%H%M')|int < 1100 -%}
            220
          {%- elif now().strftime('%H%M')|int < 1300 -%}
            250
          {%- elif now().strftime('%H%M')|int < 1500 -%}
            220
          {%- elif now().strftime('%H%M')|int < 1800 -%}
            192
          {%- elif now().strftime('%H%M')|int < 1900 -%}
            180
          {%- elif now().strftime('%H%M')|int < 2030 -%}
            150
          {%- elif now().strftime('%H%M')|int < 2130 -%}
            128
          {%- elif now().strftime('%H%M')|int < 2230 -%}
            64
          {%- elif now().strftime('%H%M')|int < 2300 -%}
            32
          {%- else -%}
            20
          {%- endif -%}
  ###########################################################
  #
  # Set Light Sensor to brightness for Automations
  #
  ############################################################

      light_sensor:
        friendly_name: Inside Light Sensor
        value_template: >-
          {% if states ("sensor.luminance_dinner_room_mean") | float >= 40 %}
            Bright
          {% elif states ("sensor.luminance_dinner_room_mean") | float < 40 and states ("sensor.luminance_dinner_room_mean") | float >= 25 %}
            Shade
          {% elif states ("sensor.luminance_dinner_room_mean") | float < 25 and is_state("input_boolean.night_mode", "off") %}
            Dark
          {% elif ("sensor.luminance_dinner_room_mean") | float < 25 and is_state("input_boolean.night_mode", "on") %}
            Night
          {% endif %}
  # states.sensor.luminance_living_room_mean
  # {% elif states ("sensor.luminance_dinner_room_mean") | float < 29 and states("sensor.luminance_dinner_room_mean") | float >= 20 %}
  #   Dim

# input_slider:
#   luminance_living_room_setpoint:
#     name: Luminance Living Room Setpoint
#     icon: mdi:brightness-auto
#     initial: 20
#     min: 0
#     max: 200
#     step: 10
#   living_room_level:
#     name: Current Living Room Light Level
#     icon: mdi:brightness-6
#     initial: 150
#     min: 0
#     max: 255
#     step: 1
#
# automation:
#
#   - alias: "auto_luminance_living_room_control"
#     trigger:
#       - platform: time
#         minutes: '/1'
#         seconds: 00
#       - platform: template
#         value_template: '{{ (states.sensor.luminance_living_room_mean |int ) > (states.input_slider.luminance_living_room_setpoint.state |int) }}'
#     action:
#       - service: input_slider.select_value
#         entity_id: input_slider.living_room_level
#         data_template:
#           value: '{{ (states.input_slider.living_room_level.state | int) - 5 }}'
#
#   - alias: "auto_luminance_living_room_control"
#     trigger:
#       - platform: time
#         minutes: '/1'
#         seconds: 00
#       - platform: template
#         value_template: '{{ (states.sensor.luminance_living_room_mean |int ) < (states.input_slider.luminance_living_room_setpoint.state |int) }}'
#     action:
#       - service: input_slider.select_value
#         entity_id: input_slider.living_room_level
#         data_template:
#           value: '{{ (states.input_slider.living_room_level.state | int) + 5 }}'
#
#   - alias: "Set living room light level"
#     trigger:
#       - platform: time
#         minutes: '/1'
#         seconds: 00
#       - platform: template
#         value_template:  '{{ (states.sensor.luminance_living_room_mean |int ) != (states.input_slider.luminance_living_room_setpoint.state |int) }}'
#     action:
#       - service: light.turn_on
#         entity_id:
#           - group.living_room_lights
#         data_template:
#           brightness: '{{ states.input_slider.living_room_level.state | int }}'
#
# group:
#   Living Room Lights:
#     name: Living Room Lights
#     entities:
#       - light.living_room_level
#
#   Automatic Luminance Settings:
#     name: Automatic Luminance Settings
#     control: hidden
#     entities:
#     - automation.auto_luminance_living_room_control
#     - light.living_room_level
#     - sensor.luminance_living_room_mean
#     - input_slider.luminance_living_room_setpoint
#     - input_slider.living_room_level
